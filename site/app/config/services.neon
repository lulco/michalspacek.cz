services:
	routerFactory:
		class: \MichalSpacekCz\Application\RouterFactory
		setup:
			- setSupportedLocales(%locales.supported%)
			- setLocaleRootDomainMapping(%locales.rootDomainMapping%)
			- setTranslatedRoutes(%translatedRoutes.presenters%)
	router: @routerFactory::createRouter
	localeLinkGenerator: \MichalSpacekCz\Application\LocaleLinkGenerator
	texyFormatter:
		class: \MichalSpacekCz\Formatter\Texy
		setup:
			- addHandlers()
	redirections:  \MichalSpacekCz\Redirections
	articles:  \MichalSpacekCz\Articles
	files:     \MichalSpacekCz\Files
	talks:     \MichalSpacekCz\Talks
	trainings: \MichalSpacekCz\Training\Trainings
	companyTrainings: \MichalSpacekCz\Training\CompanyTrainings
	interviews: \MichalSpacekCz\Interviews
	trainingApplications: \MichalSpacekCz\Training\Applications
	trainingMails:
		class: \MichalSpacekCz\Training\Mails
		setup:
			- setTemplatesDir('../../app/emails')
			- setEmailFrom('Michal Špaček <mail@michalspacek.cz>')
			- setPhoneNumber(%contact.phoneNumber%)
	trainingDates: \MichalSpacekCz\Training\Dates
	trainingVenues: \MichalSpacekCz\Training\Venues
	trainingStatuses: \MichalSpacekCz\Training\Statuses
	trainingNotifications: \MichalSpacekCz\Training\Notifications
	trainingFiles:
		class: \MichalSpacekCz\Training\Files
		setup:
			- setFilesDir('../../files/trainings')
	authenticator:
		class: \MichalSpacekCz\User\Manager
		setup:
			- setPermanentLoginInterval(%returningUser.permanentLoginInterval%)
			- setReturningUserCookie(%returningUser.cookie%)
			- setReturningUserValue(%returningUser.value%)
	embed: \MichalSpacekCz\Embed
	webTracking:
		class: \MichalSpacekCz\WebTracking
		setup:
			- setCookie(%webTracking.cookie%)
			- setValue(%webTracking.value%)
	vranaNotifier:
		class: \MichalSpacekCz\Notifier\Vrana
		setup:
			- setUrl(%notifier.vrana.url%)
			- setNote(%notifier.vrana.note%)
			- setNoSpam(%notifier.vrana.noSpam%)
			- setSuccessMarker(%notifier.vrana.successMarker%)
	httpResponse:
		setup:
			- $cookieDomain(%domain.cookie%)
			- $cookieSecure(true)
	session:
		setup:
			- setCookieParameters(/, %domain.cookie%, true)
	netxtenHelpers: \Netxten\Templating\Helpers
	helpers:
		class: \MichalSpacekCz\Templating\Helpers
		setup:
			- setStaticRoot(%domain.sharedStaticRoot%)
	vat:
		class: \MichalSpacekCz\Vat
		setup:
			- setRate(%vatRate%)
	contentSecurityPolicy:
		class: \Spaze\ContentSecurityPolicy\Config
		setup:
			- setPolicy(%contentSecurityPolicy.policies%)
			- setSnippets(%contentSecurityPolicy.snippets%)
			- supportLegacyBrowsers()
	publicKeyPins:
		class: \MichalSpacekCz\PublicKeyPins
		setup:
			- setPins(%publicKeyPins%)
	securityHeaders:
		class: \MichalSpacekCz\SecurityHeaders
		setup:
			- setDefaultDomain(%domain.default%)
			- setRootDomain(%domain.root%)
			- setExtraHeaders(%extraHeaders%)
	staticKeyEncryption:
		class: \MichalSpacekCz\Encryption\Symmetric\StaticKey
		setup:
			- setKeys(%encryption.keys%)
			- setActiveKeyIds(%encryption.activeKeyIds%)
	passwordEncryption: \MichalSpacekCz\Encryption\Password
	emailEncryption: \MichalSpacekCz\Encryption\Email
	companyInfo:
		class: \MichalSpacekCz\CompanyInfo\Info
		setup:
			- setLoadCompanyDataVisible(%loadCompanyDataVisible%)
	ares:
		class: \MichalSpacekCz\CompanyInfo\Ares
		setup:
			- setUrl(%ares.url%)
	registerUz:
		class: \MichalSpacekCz\CompanyInfo\RegisterUz
		setup:
			- setRootUrl(%registerUz.rootUrl%)
	upcKeys:
		class: \MichalSpacekCz\UpcKeys(@database.upcKeys.context)
		setup:
			- setUrl(%awsLambda.upcKeys.url%)
			- setApiKey(%awsLambda.upcKeys.apiKey%)
			- setPrefixes(%awsLambda.upcKeys.prefixes%)
